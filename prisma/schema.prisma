// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

generator zod {
  provider      = "zod-prisma"
  output        = "./zod"
  imports       = "./zod-utils"
  relationModel = "default"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 Int              @id @default(autoincrement())
  /// @zod.custom(imports.username)
  username           String?
  name               String?
  email              String           @unique
  emailVerified      DateTime?
  avatar             String?
  identityProvider   IdentityProvider @default(GOOGLE)
  identityProviderId String?
  completedOnboarding Boolean @default(false)
  accounts           Account[]
  sessions           Session[]

  country     String @default("usa")
  inflation   Int    @default(8)
  currency    String @default("USD")
  investPerc  Int    @default(80)
  indexReturn Int    @default(7)

  salary Salary?
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

enum IdentityProvider {
  MAGIC
  GOOGLE
  GITHUB
}

model Salary {
  id       Int      @id @default(autoincrement())
  title    String
  currency String
  amount   String
  variance Period[]

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Period {
  id     Int @id @default(autoincrement())
  from   Int
  amount Int

  salary   Salary @relation(fields: [salaryId], references: [id])
  salaryId Int
}

model Category {
  id         Int    @id @default(autoincrement())
  title      String
  budget     Int
  currency   String
  type       String
  inflType   String
  country    String
  inflVal    Int
  color      String
  icon       String
  frequencey Int

  records Record[]
}

model Record {
  id         Int    @id @default(autoincrement())
  title      String
  amount     Int
  type       String
  frequencey Int
  inflation  Int
  currency   String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}
